rand_pred = randomize_mask(pred, mask = mask)
xyz = xyz(pred)
ortho2(ss, pred, xyz = xyz)
ortho2(ss, pred, xyz = xyz, crosshairs = FALSE, add.orient = FALSE)
ortho2(ss, rand_pred, xyz = xyz, crosshairs = FALSE, add.orient = FALSE)
source('~/Dropbox/CTR/DHanley/CT_Registration/Segmentation/Seg_Figure/Reseg_Rando_Seg_Figure.R')
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
outdir = path.expand("~/CT_Registration/Oral_Proposal/figure")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
roi_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
roi = readnii(roi)
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
roi_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
roi = readnii(roi_fname)
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
roi_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5ROI.nii.gz")
roi = readnii(roi_fname)
pred_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
pred = readnii(pred_fname)
ss_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5_SS_0.01.nii.gz")
ss = readnii(ss_fname)
wss = window_img(ss)
ortho2(wss)
xyz = xyz(roi)
roi_ind = which(roi > 0, arr.ind = TRUE)
slice = as.numeric(names(which.max(table(roi_ind[,3]))))
slice
xyz
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
roi_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5ROI.nii.gz")
roi = readnii(roi_fname)
pred_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
pred = readnii(pred_fname)
ss_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5_SS_0.01.nii.gz")
ss = readnii(ss_fname)
wss = window_img(ss)
xyz = xyz(roi)
#########################################
# Rotated Image
#########################################
iimg = 1
pngnames = file.path(
resdir,
"IVH_Seg.png")
#############################
#
#############################
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
ss_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5_SS_0.01.nii.gz")
ss = readnii(ss_fname)
dd = dropEmptyImageDimensions(ss, keep_ind = TRUE)
ss = dd$outimg
wss = window_img(ss)
roi_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5ROI.nii.gz")
roi = readnii(roi_fname)
pred_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
pred = readnii(pred_fname)
ss = dd$outimg
wss = window_img(ss)
roi = apply_empty_dim(img = roi, inds = dd$inds)
pred = apply_empty_dim(img = pred, inds = dd$inds)
ss = dd$outimg
wss = window_img(ss)
xyz = xyz(roi)
pngname = file.path(
resdir,
"IVH_Seg.png")
ortho2(wss, pred)
range(pred)
hist(c(pred))
unique(pred)
unique(c(pred))
unique(c(pred[pred!= 0]))
hist(c(pred[pred!= 0]))
pred = readnii(pred_fname) > 0.9
ichseg::rf_modlist
ichseg::rf_modlist$mod.dice.coef
ichseg::rf_modlist$mod.dice.coef["cutoff"]
ichseg::rf_modlist$mod.dice.coef[,"cutoff"]
#############################
#
#############################
rm(list = ls())
library(fslr)
library(ichseg)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
ss_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5_SS_0.01.nii.gz")
ss = readnii(ss_fname)
dd = dropEmptyImageDimensions(ss, keep_ind = TRUE)
roi_fname = file.path(
homedir,
"102-393_20110104_0749_CT_2_Outside_5ROI.nii.gz")
roi = readnii(roi_fname)
pred_fname = file.path(
homedir,
"Reseg_102-393_20110104_0749_CT_2_Outside_5_rf_smoothed_prediction_cc_native.nii.gz")
pred = readnii(pred_fname) > ichseg::rf_modlist$mod.dice.coef[,"cutoff"]
roi = apply_empty_dim(img = roi, inds = dd$inds)
pred = apply_empty_dim(img = pred, inds = dd$inds)
ss = dd$outimg
wss = window_img(ss)
xyz = xyz(roi)
pngname = file.path(
resdir,
"IVH_Seg.png")
ortho2(wss, pred)
ortho2(wss, pred, xyz=xyz)
source('~/Dropbox/CTR/DHanley/CT_Registration/Segmentation/Seg_Figure/Reseg_Seg_IVH.R')
dice
man_dice
rm(list=ls())
library(knitr)
setwd("../Segmentation_Paper/")
knit("CT_ICH_Segmentation.Rnw")
man_dice
man_dice %>% filter(truevol > 100)
hist(man_dice$Pre_Rand_IVHvol)
median(man_dice$Pre_Rand_IVHvol)
meann(man_dice$Pre_Rand_IVHvol)
mean(man_dice$Pre_Rand_IVHvol)
train_man
mean(train_man$truevol)
round(mean(train_man$truevol), 2)
round(mean(train_man$truevol), 1)
train.man.tab
paste0(names(train.man.tab))
paste0(names(train.man.tab), train.man.tab)
paste0(names(train.man.tab), "(N = ", train.man.tab, ")")
paste0(names(train.man.tab), " (N = ", train.man.tab, ")")
paste0(names(train.man.tab), " (N = ", train.man.tab, "),")
train.man.tab = table(man_fdf$man[ man_fdf$group == "Train"])
train.man.tab = paste0(names(train.man.tab), " (N = ", train.man.tab, "),")
train.man.tab[length(train.man.tab)] = paste0("and ", train.man.tab[length(train.man.tab)])
train.man.tab[length(train.man.tab)] = gsub(",$", "", train.man.tab[length(train.man.tab)])
train.man.tab
train.man.tab = table(man_fdf$man[ man_fdf$group == "Train"])
train.man.tab = paste0(names(train.man.tab), " (N = ", train.man.tab, "),")
train.man.tab
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
xxx = load("Reseg_111_Filenames_with_Exclusions.Rda")
groups = fdf[, c("id", "group")]
rda = "Scanning_Parameters.Rda"
load(rda)
num_pid_to_id = function(x){
site_id = floor(x/1000)
id = x %% 1000
paste0(site_id, "-", id)
}
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
models = lapply(alltabs, function(x) {
unique(x[[ "0008-1090-ManufacturerModelName"]])
})
stopifnot(all(sapply(models, length) == 1))
models = unlist(models)
fdf$model = models
fdf$model[fdf$id == "131-354"] = ""
fdf$model[fdf$id == "179-402"] = ""
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
man_fdf = fdf[, c("id", "pid", "man", "model")]
man_fdf = left_join(man_fdf, groups, by = "id")
# man = sapply(man, unique)
stopifnot(nrow(fdf) == 112)
stopifnot(length(unique(fdf$id)) == 112)
#####################
# Running manufacturers
#####################
man.tab = sort(table(man), decreasing=TRUE)
stopifnot(length(man.tab) == 4)
manu = names(man.tab)
manu[manu == 'TOSHIBA'] = "Toshiba"
manu[manu == 'SIEMENS'] = "Siemens"
man.tab = paste0(manu, " ($N=", man.tab, "$)")
man.tab[length(man.tab)] = paste0('and ', man.tab[length(man.tab)] )
man.tab[seq(length(man.tab)-1)] = paste0(man.tab[seq(length(man.tab)-1)], ", " )
man.tab = paste(man.tab, collapse= " ")
train.man.tab = table(man_fdf$man[ man_fdf$group == "Train"])
train.man.tab
train.man.tab = paste0(names(train.man.tab), " (N = ", train.man.tab, "),")
train.man.tab[length(train.man.tab)] = paste0("and ", train.man.tab[length(train.man.tab)])
train.man.tab[length(train.man.tab)] = gsub(",$", "", train.man.tab[length(train.man.tab)])
train.man.tab
train.man.tab = paste(train.man.tab, collapse = " ")
train.man.tab
man_dice
load("Reseg_111_Filenames_with_volumes.Rda")
hu_df = fdf[, c("id", "mean", "median", "sd")]
load("Reseg_Results.Rda")
run_group = c("Test", "Validation")
long = filter(long,
cutoff %in% c("cc", "scc"))
long$cutoff = revalue(long$cutoff,
c("cc"= "Unsmoothed",
"scc" = "Smoothed")
)
long = mutate(long,
mean = (tvol + evol) /2,
diff = tvol - evol
)
all_long = long
long = filter(long,
group %in% c("Test", "Validation"))
slong = filter(long,
cutoff %in% c("Smoothed"))
nlong = filter(slong, app %in% "Native")
llong = select(nlong, mod,
dice, sens, accur,
spec, iimg, group)
llong = melt(llong,
id.vars = c("iimg", "group", "mod"))
relev2 = c("dice" = "Dice Similarity Index",
"accur" = "Accuracy",
"sens" = "Sensitivity",
"spec" = "Specificity")
llong$variable = revalue(llong$variable,
relev2
)
llong$variable = factor(llong$variable,
levels = relev2)
native = filter(slong, app %in% "Native")
dice = filter(native, mod %in% "rf")
all_dice = filter(all_long,
cutoff %in% c("Smoothed"),
app %in% "Native",
mod %in% "rf")
check_ids = function(ids) {
stopifnot(all(all_dice$id %in% ids))
}
check_ids(man_fdf$id)
check_ids(hu_df$id)
check_ids(ivh$id)
man_dice = left_join(
all_dice %>%
select(iimg, id, dice, group, truevol, estvol) %>%
mutate(truevol = truevol / 1000,
estvol = estvol / 1000),
man_fdf, by = "id")
man_dice = left_join(
man_dice,
hu_df,
by = "id")
man_dice = left_join(
man_dice,
ivh,
by = "id")
train_man = filter(man_dice, group %in% "Train")
man_dice = filter(man_dice, !group %in% "Train")
man_dice$ich_cat = cut(man_dice$truevol,
breaks = c(0, 30, 60, max(man_dice$truevol)),
include.lowest = TRUE)
man_dice$pre_ich_cat = cut(man_dice$Pre_Rand_ICHvol,
breaks = c(0, 30, 60, max(man_dice$truevol)),
include.lowest = TRUE)
stopifnot(all(!is.na(man_dice$ich_cat)))
stopifnot(all(!is.na(man_dice$pre_ich_cat)))
large_ivh = man_dice %>% arrange(-Pre_Rand_IVHvol) %>% head(2)
man_dice %>% filter(truevol > 100)
n_under_50 = sum(dice$dice < 0.5)
L = length(dice$dice)
stopifnot(L == non_nmods)
fail_rate = sprintf("%3.1f",
n_under_50/non_nmods*100)
qs = quantile(dice$dice)
ranks = rank(dice$dice)
inds = floor(quantile(1:nrow(dice)))
pick = which(ranks %in% inds)
pick = pick[ order(ranks[pick])]
qs = round(qs, 2)
dice = dice[pick, , drop = FALSE]
dice$quantile = names(qs)
med_dice = group_by(native, mod) %>% summarise(med = median(dice))
med_dice = as.data.frame(med_dice)
nn = as.character(med_dice$mod)
med_dice = med_dice$med
names(med_dice) = nn
med_dice = round(med_dice, 3)
save(med_dice, file = "Median_Dice_Abstract.rda")
man_dice
train.man.tabn
train_man
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
xxx = load("Reseg_111_Filenames_with_Exclusions.Rda")
groups = fdf[, c("id", "group")]
rda = "Scanning_Parameters.Rda"
load(rda)
num_pid_to_id = function(x){
site_id = floor(x/1000)
id = x %% 1000
paste0(site_id, "-", id)
}
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
models = lapply(alltabs, function(x) {
unique(x[[ "0008-1090-ManufacturerModelName"]])
})
stopifnot(all(sapply(models, length) == 1))
models = unlist(models)
fdf$model = models
fdf$model[fdf$id == "131-354"] = ""
fdf$model[fdf$id == "179-402"] = ""
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
man_fdf = fdf[, c("id", "pid", "man", "model")]
man_fdf = left_join(man_fdf, groups, by = "id")
# man = sapply(man, unique)
stopifnot(nrow(fdf) == 112)
stopifnot(length(unique(fdf$id)) == 112)
#####################
# Running manufacturers
#####################
man.tab = sort(table(man), decreasing=TRUE)
stopifnot(length(man.tab) == 4)
manu = names(man.tab)
manu[manu == 'TOSHIBA'] = "Toshiba"
manu[manu == 'SIEMENS'] = "Siemens"
man.tab = paste0(manu, " ($N=", man.tab, "$)")
man.tab[length(man.tab)] = paste0('and ', man.tab[length(man.tab)] )
man.tab[seq(length(man.tab)-1)] = paste0(man.tab[seq(length(man.tab)-1)], ", " )
man.tab = paste(man.tab, collapse= " ")
train.man.tab = table(man_fdf$man[ man_fdf$group == "Train"])
train.man.tab = paste0(names(train.man.tab), " (N = ", train.man.tab, "),")
train.man.tab[length(train.man.tab)] = paste0("and ", train.man.tab[length(train.man.tab)])
train.man.tab[length(train.man.tab)] = gsub(",$", "", train.man.tab[length(train.man.tab)])
train.man.tab = paste(train.man.tab, collapse = " ")
man_fdf$group = NULL
#####################
# Running slice thickness
#####################
slices = lapply(alltabs, `[[`, "0018-0050-SliceThickness")
slices = sapply(slices, function(x) {
stopifnot(all(!is.na(x)))
stopifnot(all(x != ""))
length(unique(x))
})
n.slices = sum(slices > 1)
tilt = lapply(alltabs, `[[`, "0018-1120-GantryDetectorTilt")
tilt = sapply(tilt, unique)
tilt = as.numeric(tilt)
check.na = function(x){
stopifnot(all(!is.na(x)))
}
check.na(tilt)
n.gant = sum(tilt != 0)
#"102-323" added over the 111 pts
all_and_ices = load("All_IncludingICES_Patients.Rda")
stopifnot(all(all_and_ices == "all.alldat"))
ivh = all.alldat
rm(list= "all.alldat")
# ivh = read.csv("All_Patients.csv", stringsAsFactors = FALSE)
ivh = ivh[, c("Pre_Rand_IVHvol", "Pre_Rand_ICHvol", "patientName")]
ivh$id = num_pid_to_id(ivh$patientName)
ivh$patientName = NULL
demog = read.csv("Patient_Demographics.csv",
stringsAsFactors = FALSE)
demog = demog[,c("Age", "Gender", "Ethnicity", "patientName")]
demog_icc = demog[ demog$patientName %in% unique(fdf$pid), ]
mean.age = round(mean(demog_icc$Age), 1)
sd.age = round(sd(demog_icc$Age), 1)
mean.male = round(prop.table(table(demog_icc$Gender))['Male'] * 100, 1)
race = sort(round(prop.table(table(demog_icc$Ethnicity)) * 100, 1), decreasing = TRUE)
race = paste0(race, "\\% ", names(race))
race[length(race)] = paste0("and ", race[length(race)])
race = gsub(" not Hispanic", "", race)
race = gsub("Islander", "islander", race)
race = paste0(race, collapse = ", ")
pvaller = function(x, min.pval = 0.05){
mp = signif(min.pval, 1)
ifelse(x < min.pval, paste0("< ", mp),
paste0("= ", signif(x, 2)))
}
library(knitr)
knit("CT_ICH_Segmentation.Rnw")
train_man
head(train_man)
head(train_man$truevol)
mean(head(train_man$truevol))
mean(train_man$truevol)
rund(mean(train_man$truevol), 1)
rund(mean(train_man$mean), 1)
round(mean(train_man$mean), 1)
head(train_man)
man_dice[ man_dice$dice == 0,]
man_dice %>% arrange(-Pre_Rand_IVHvol)
man_dice %>% arrange(-Pre_Rand_IVHvol) %>% head
