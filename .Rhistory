L = loader("Number_of_Non_Nmods_Abstract.rda", c("non_nmods", "total_N"))
non_nmods = L$non_nmods
total_N = L$total_N
med_dice = loader("Median_Dice_Abstract.rda", "med_dice")$med_dice
wt_pvals = loader("Wilcoxon_Rank_pvalues_Abstract.rda", "wt_pvals")$wt_pvals
corrdata = loader("Correlation_data_Abstract.rda", "corrdata", replacer = NULL)$corrdata
## ----label=setup_dir, echo=FALSE-----------------------------------------
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
rda = "Scanning_Parameters.Rda"
load(rda)
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
# man = sapply(man, unique)
rm(list=ls())
## ----label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE----
library(knitr)
# knit_hooks$set(webgl = hook_webgl)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
## ----load_res, eval = TRUE, echo = FALSE---------------------------------
#rda = file.path(resdir, "Result_Formats.Rda")
rda = "Reseg_Result_Formats_Rigid.Rda"
xx = load(rda)
Nmods = non.aggmods
rm(list=xx)
## ----echo = FALSE--------------------------------------------------------
loader = function(x, varnames, replacer = " ") {
L = vector(mode = "list", length = length(varnames))
names(L) = varnames
for (i in varnames) {
L[[i]] = replacer
}
if (file.exists(x)) {
rr = load(x)
for (i in varnames) {
xx = get(i)
if (is.null(xx)){
xx = replacer
}
L[[i]] = xx
}
return(L)
}
L = loader("Number_of_Non_Nmods_Abstract.rda", c("non_nmods", "total_N"))
non_nmods = L$non_nmods
total_N = L$total_N
med_dice = loader("Median_Dice_Abstract.rda", "med_dice")$med_dice
wt_pvals = loader("Wilcoxon_Rank_pvalues_Abstract.rda", "wt_pvals")$wt_pvals
corrdata = loader("Correlation_data_Abstract.rda", "corrdata", replacer = NULL)$corrdata
## ----label=setup_dir, echo=FALSE-----------------------------------------
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
rda = "Scanning_Parameters.Rda"
load(rda)
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
# man = sapply(man, unique)
fdf
names(fdf)
## ----label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE----
library(knitr)
# knit_hooks$set(webgl = hook_webgl)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
## ----load_res, eval = TRUE, echo = FALSE---------------------------------
#rda = file.path(resdir, "Result_Formats.Rda")
rda = "Reseg_Result_Formats_Rigid.Rda"
xx = load(rda)
Nmods = non.aggmods
rm(list=xx)
## ----echo = FALSE--------------------------------------------------------
loader = function(x, varnames, replacer = " ") {
L = vector(mode = "list", length = length(varnames))
names(L) = varnames
for (i in varnames) {
L[[i]] = replacer
}
if (file.exists(x)) {
rr = load(x)
for (i in varnames) {
xx = get(i)
if (is.null(xx)){
xx = replacer
}
L[[i]] = xx
}
return(L)
}
L = loader("Number_of_Non_Nmods_Abstract.rda", c("non_nmods", "total_N"))
non_nmods = L$non_nmods
total_N = L$total_N
med_dice = loader("Median_Dice_Abstract.rda", "med_dice")$med_dice
wt_pvals = loader("Wilcoxon_Rank_pvalues_Abstract.rda", "wt_pvals")$wt_pvals
corrdata = loader("Correlation_data_Abstract.rda", "corrdata", replacer = NULL)$corrdata
## ----label=setup_dir, echo=FALSE-----------------------------------------
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
rda = "Scanning_Parameters.Rda"
load(rda)
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
man_fdf = fdf[, c("id", "pid", "man")]
man_fdf
load("Reseg_Results.Rda")
run_group = c("Test", "Validation")
long = filter(long,
cutoff %in% c("cc", "scc"))
long$cutoff = revalue(long$cutoff,
c("cc"= "Unsmoothed",
"scc" = "Smoothed")
)
long = mutate(long,
mean = (tvol + evol) /2,
diff = tvol - evol
)
long = filter(long,
group %in% c("Test", "Validation"))
slong = filter(long,
cutoff %in% c("Smoothed"))
nlong = filter(slong, app %in% "Native")
llong = select(nlong, mod,
dice, sens, accur,
spec, iimg, group)
llong = melt(llong,
id.vars = c("iimg", "group", "mod"))
relev2 = c("dice" = "Dice Similarity Index",
"accur" = "Accuracy",
"sens" = "Sensitivity",
"spec" = "Specificity")
llong$variable = revalue(llong$variable,
relev2
)
llong$variable = factor(llong$variable,
levels = relev2)
native = filter(slong, app %in% "Native")
head(native)
head(long)
load("Reseg_Results.Rda")
run_group = c("Test", "Validation")
long = filter(long,
cutoff %in% c("cc", "scc"))
long$cutoff = revalue(long$cutoff,
c("cc"= "Unsmoothed",
"scc" = "Smoothed")
)
long = mutate(long,
mean = (tvol + evol) /2,
diff = tvol - evol
)
long = filter(long,
group %in% c("Test", "Validation"))
slong = filter(long,
cutoff %in% c("Smoothed"))
nlong = filter(slong, app %in% "Native")
llong = select(nlong, mod,
dice, sens, accur,
spec, iimg, group)
llong = melt(llong,
id.vars = c("iimg", "group", "mod"))
relev2 = c("dice" = "Dice Similarity Index",
"accur" = "Accuracy",
"sens" = "Sensitivity",
"spec" = "Specificity")
llong$variable = revalue(llong$variable,
relev2
)
llong$variable = factor(llong$variable,
levels = relev2)
native = filter(slong, app %in% "Native")
native$id
dice = filter(native, mod %in% "rf")
n_under_50 = sum(dice$dice < 0.5)
L = length(dice$dice)
stopifnot(L == non_nmods)
fail_rate = sprintf("%3.1f",
n_under_50/non_nmods*100)
qs = quantile(dice$dice)
ranks = rank(dice$dice)
inds = floor(quantile(1:nrow(dice)))
pick = which(ranks %in% inds)
pick = pick[ order(ranks[pick])]
qs = round(qs, 3)
dice = dice[pick, , drop=FALSE]
dice$quantile = names(qs)
dcie$id
non_nmods = 102
stopifnot(L == non_nmods)
fail_rate = sprintf("%3.1f",
n_under_50/non_nmods*100)
qs = quantile(dice$dice)
ranks = rank(dice$dice)
inds = floor(quantile(1:nrow(dice)))
pick = which(ranks %in% inds)
pick = pick[ order(ranks[pick])]
qs = round(qs, 3)
dice = dice[pick, , drop=FALSE]
dice$quantile = names(qs)
dice$id
dice = left_join(dice, man_fdf, by = "id")
die
dice
dim(dice)
## ----label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE----
library(knitr)
# knit_hooks$set(webgl = hook_webgl)
opts_chunk$set(echo=FALSE, prompt=FALSE, message=FALSE, warning=FALSE, comment="", results='hide')
## ----load_res, eval = TRUE, echo = FALSE---------------------------------
#rda = file.path(resdir, "Result_Formats.Rda")
rda = "Reseg_Result_Formats_Rigid.Rda"
xx = load(rda)
Nmods = non.aggmods
rm(list=xx)
## ----echo = FALSE--------------------------------------------------------
loader = function(x, varnames, replacer = " ") {
L = vector(mode = "list", length = length(varnames))
names(L) = varnames
for (i in varnames) {
L[[i]] = replacer
}
if (file.exists(x)) {
rr = load(x)
for (i in varnames) {
xx = get(i)
if (is.null(xx)){
xx = replacer
}
L[[i]] = xx
}
return(L)
}
L = loader("Number_of_Non_Nmods_Abstract.rda", c("non_nmods", "total_N"))
non_nmods = L$non_nmods
total_N = L$total_N
med_dice = loader("Median_Dice_Abstract.rda", "med_dice")$med_dice
wt_pvals = loader("Wilcoxon_Rank_pvalues_Abstract.rda", "wt_pvals")$wt_pvals
corrdata = loader("Correlation_data_Abstract.rda", "corrdata", replacer = NULL)$corrdata
## ----label=setup_dir, echo=FALSE-----------------------------------------
ll = ls()
ll = ll[ !ll %in% c("encoding", "Nmods")]
rm(list = ll)
library(tidyr)
library(cttools)
library(fslr)
library(plyr)
library(dplyr)
library(reshape2)
library(broom)
library(xtable)
options(matlab.path = '/Applications/MATLAB_R2014b.app/bin')
# username <- Sys.info()["user"][[1]]
rootdir = path.expand("~/CT_Registration")
# basedir = file.path(rootdir, "Segmentation")
# resdir = file.path(basedir, "results")
# paperdir = file.path(basedir, "Segmentation_Paper")
# figdir = file.path(paperdir, "figure")
# total_rda = file.path(basedir, "111_Filenames_with_volumes_stats.Rda")
# load(total_rda)
# fdf$patientName = as.numeric(gsub("-", "", fdf$id))
# csvname = file.path(rootdir, "data", "Imaging_Information.csv")
# imag = read.csv(csvname, stringsAsFactors = FALSE)
# imag$patientName = imag$id
# imag$id = NULL
#
# setdiff(fdf$patientName, imag$patientName)
rda = "Scanning_Parameters.Rda"
load(rda)
fdf$site_number = sapply(strsplit(fdf$id, "-"), `[[`, 1)
fdf$pid = as.numeric(gsub("-", "", fdf$id))
man = lapply(alltabs, function(x) {
unique(x[["0008-0070-Manufacturer"]])
})
stopifnot(all(sapply(man, length) == 1))
man = unlist(man)
fdf$man = man
fdf$man[fdf$man == 'TOSHIBA'] = "Toshiba"
fdf$man[fdf$man == 'SIEMENS'] = "Siemens"
man_fdf = fdf[, c("id", "pid", "man")]
# man = sapply(man, unique)
stopifnot(nrow(fdf) == 112)
stopifnot(length(unique(fdf$id)) == 112)
#####################
# Running manufacturers
#####################
man.tab = sort(table(man), decreasing=TRUE)
stopifnot(length(man.tab) == 4)
manu = names(man.tab)
manu[manu == 'TOSHIBA'] = "Toshiba"
manu[manu == 'SIEMENS'] = "Siemens"
man.tab = paste0(manu, " ($N=", man.tab, "$)")
man.tab[length(man.tab)] = paste0('and ', man.tab[length(man.tab)] )
man.tab[seq(length(man.tab)-1)] = paste0(man.tab[seq(length(man.tab)-1)], ", " )
man.tab = paste(man.tab, collapse= " ")
#####################
# Running slice thickness
#####################
slices = lapply(alltabs, `[[`, "0018-0050-SliceThickness")
slices = sapply(slices, function(x) {
stopifnot(all(!is.na(x)))
stopifnot(all(x != ""))
length(unique(x))
})
n.slices = sum(slices > 1)
tilt = lapply(alltabs, `[[`, "0018-1120-GantryDetectorTilt")
tilt = sapply(tilt, unique)
tilt = as.numeric(tilt)
check.na = function(x){
stopifnot(all(!is.na(x)))
}
check.na(tilt)
n.gant = sum(tilt != 0)
#"102-323" added over the 111 pts
demog = read.csv("Patient_Demographics.csv",
stringsAsFactors = FALSE)
demog = demog[,c("Age", "Gender", "Ethnicity", "patientName")]
demog_icc = demog[ demog$patientName %in% unique(fdf$pid), ]
mean.age = round(mean(demog_icc$Age), 1)
sd.age = round(sd(demog_icc$Age), 1)
mean.male = round(prop.table(table(demog_icc$Gender))['Male'] * 100, 1)
race = sort(round(prop.table(table(demog_icc$Ethnicity)) * 100, 1), decreasing = TRUE)
race = paste0(race, "\\% ", names(race))
race[length(race)] = paste0("and ", race[length(race)])
race = gsub(" not Hispanic", "", race)
race = gsub("Islander", "islander", race)
race = paste0(race, collapse = ", ")
pvaller = function(x, min.pval = 0.05){
mp = signif(min.pval, 1)
ifelse(x < min.pval, paste0("< ", mp),
paste0("= ", signif(x, 2)))
}
## ------------------------------------------------------------------------
xx = load("Reseg_Aggregate_data_cutoffs_Rigid.Rda")
## ----threshes------------------------------------------------------------
lthresh = 40
uthresh = 80
## ------------------------------------------------------------------------
nsub_voxels = 1e5
nsub_voxels = formatC(nsub_voxels, digits=7, big.mark="{,}")
prop = 0.25
pct_prop = sprintf("%02.2f", prop * 100)
## ------------------------------------------------------------------------
reset = FALSE
if ("fdf" %in% ls()){
xfdf = fdf
}
total_N = nrow(fdf)
load("Reseg_111_Filenames_with_Exclusions.Rda")
voldf = fdf
if (reset) {
stopifnot(all.equal(sort(voldf$id), sort(xfdf$id)))
fdf = xfdf
}
sp_pct = function(x, digits = 1, addpct = FALSE){
x = sprintf(paste0("%02.", digits, "f"), x * 100)
if (addpct){
x = paste0(x, "%")
}
x
}
vol_res = ddply(voldf, .(group), summarise,
mean_includeY1 = sp_pct(mean(includeY1)),
min_includeY1 = sp_pct(min(includeY1)),
max_includeY1 = sp_pct(max(includeY1)),
mean_excludeY0 = sp_pct(mean(1-includeY0)),
min_excludeY0 = sp_pct(min(1-includeY0)),
max_excludeY0 = sp_pct(max(1-includeY0))
)
rownames(vol_res) = vol_res$group
vol_res$group = NULL
rn = rownames(est.cutoffs)
rn = gsub("%", "", rn)
groups = table(voldf$group)
groups = groups[ names(groups) %in% c("Validation", "Test")]
non_nmods = total_N - Nmods
save(non_nmods, total_N, file = "Number_of_Non_Nmods_Abstract.rda")
## ----dice_res------------------------------------------------------------
load("Reseg_Results.Rda")
run_group = c("Test", "Validation")
long = filter(long,
cutoff %in% c("cc", "scc"))
long$cutoff = revalue(long$cutoff,
c("cc"= "Unsmoothed",
"scc" = "Smoothed")
)
long = mutate(long,
mean = (tvol + evol) /2,
diff = tvol - evol
)
long = filter(long,
group %in% c("Test", "Validation"))
slong = filter(long,
cutoff %in% c("Smoothed"))
nlong = filter(slong, app %in% "Native")
llong = select(nlong, mod,
dice, sens, accur,
spec, iimg, group)
llong = melt(llong,
id.vars = c("iimg", "group", "mod"))
relev2 = c("dice" = "Dice Similarity Index",
"accur" = "Accuracy",
"sens" = "Sensitivity",
"spec" = "Specificity")
llong$variable = revalue(llong$variable,
relev2
)
llong$variable = factor(llong$variable,
levels = relev2)
native = filter(slong, app %in% "Native")
dice = filter(native, mod %in% "rf")
man_dice = left_join(dice, man_fdf, by = "id")
dim(man_dice)
library(ggplot2)
g = ggplot(man_dice, aes(x = man, y = dice))
g = ggplot(man_dice, aes(x = man, y = dice)) + geom_boxplot()
g
